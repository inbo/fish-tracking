library("sp")
library("rgdal")
library("rgeos")
library("raster")
library("gdistance")
library("assertthat")
install.packages("rgdal")
install.packages("gdistance")
library("sp")
library("rgdal")
library("rgeos")
library("raster")
library("gdistance")
library("assertthat")
coordinate.string <- CRS("+init=epsg:32631")
# Load the functionalities from the functions file:
source("receiver_distance_fun.R")
frome <- load.shapefile("./data/UK\Frome\WFD_River_Canal_and_Surface_Water_Transfer_Water_Bodies_Cycle_2.shp",
"WFD_River_Canal_and_Surface_Water_Transfer_Water_Bodies_Cycle_2",
coordinate.string,
river.names)
frome <- load.shapefile("./data/UK/Frome\WFD_River_Canal_and_Surface_Water_Transfer_Water_Bodies_Cycle_2.shp",
"WFD_River_Canal_and_Surface_Water_Transfer_Water_Bodies_Cycle_2",
coordinate.string,
river.names)
# RIVER FROME (UK)
frome <- load.shapefile("./data/UK/Frome/WFD_River_Canal_and_Surface_Water_Transfer_Water_Bodies_Cycle_2.shp",
"WFD_River_Canal_and_Surface_Water_Transfer_Water_Bodies_Cycle_2",
coordinate.string,
river.names)
frome <- load.shapefile("./data/UK/Frome/WFD_River_Canal_and_Surface_Water_Transfer_Water_Bodies_Cycle_2.shp",
"Statutory_Main_River_Map",
coordinate.string,
river.names)
frome <- load.shapefile("./data/UK/Frome/WFD_River_Canal_and_Surface_Water_Transfer_Water_Bodies_Cycle_2.shp",
"Statutory_Main_River_Map",
coordinate.string)
frome <- load.shapefile("./data/UK/Frome/Statutory_Main_River_Map.shp",
"Statutory_Main_River_Map",
coordinate.string)
frome <- load.shapefile("./data/UK/Frome/Statutory_Main_River_Map.shp",
"Statutory_Main_River_Map",
coordinate.string)
# Define the projection for the analysis:
coordinate.string <- CRS("+init=epsg:27700")
# Load the functionalities from the functions file:
source("receiver_distance_fun.R")
# RIVER FROME (UK)
frome <- load.shapefile("./data/UK/Frome/Statutory_Main_River_Map.shp",
"Statutory_Main_River_Map",
coordinate.string)
coordinate.string <- CRS("+init=epsg:32631")
# Load the functionalities from the functions file:
source("receiver_distance_fun.R")
nete <- load.shapefile("./data/europe_water/nete.shp",
"nete",
coordinate.string,
subset.names = NULL)
westerschelde <- load.shapefile("./data/westerschelde_water/seavox_sea_area_polygons_v13.shp",
"seavox_sea_area_polygons_v13",
coordinate.string)
# SEA
sea <- load.shapefile("./data/PJ_manual_water/PJ_ontbrekende_stukken_reduced.shp",
"PJ_ontbrekende_stukken_reduced",
coordinate.string)
frome <- load.shapefile("./data/UK/Frome/Statutory_Main_River_Map.shp",
"Statutory_Main_River_Map",
coordinate.string)
library("sp")
library("rgdal")
library("rgeos")
library("raster")
library("gdistance")
library("assertthat")
# --------------------
# INTRODUCTION
# --------------------
# Define the projection for the analysis:
coordinate.string <- CRS("+init=epsg:32631")
# Load the functionalities from the functions file:
source("receiver_distance_fun.R")
frome <- load.shapefile("./data/UK/Frome/Statutory_Main_River_Map.shp",
"Statutory_Main_River_Map",
coordinate.string)
library("sp")
library("rgdal")
library("rgeos")
library("raster")
library("gdistance")
library("assertthat")
# --------------------
# INTRODUCTION
# --------------------
# Define the projection for the analysis:
coordinate.string <- CRS("+init=epsg:32631")
# Load the functionalities from the functions file:
source("receiver_distance_fun.R")
# RIVER FROME (UK)
frome <- load.shapefile("./data/UK/Frome/Statutory_Main_River_Map.shp",
"Statutory_Main_River_Map",
coordinate.string)
install.packages("spocc")
library(spocc)
library("sp")
library("rgdal")
library("rgeos")
library("raster")
library("gdistance")
library("assertthat")
library("sp")
library("rgdal")
library("rgeos")
library("raster")
library("gdistance")
library("assertthat")
coordinate.string <- CRS("+init=epsg:32631")
# Load the functionalities from the functions file:
source("receiver_distance_fun.R")
frome <- load.shapefile("./data/UK/Frome/Statutory_Main_River_Map.shp",
"Statutory_Main_River_Map",
coordinate.string)
nete <- load.shapefile("./data/europe_water/nete.shp",
"nete",
coordinate.string,
subset.names = NULL)
river.names <- c("Schelde", "Durme", "Rupel", "Netekanaal",
"Albertkanaal", "Royerssluis", "Leopolddok",
"Amerikadok", "Vijfde Havendok", "Kanaaldok B3", "Delwaidedok",
"Schelde-Rijnkanaal", "Berendrechtsluis", "Hansadok",
"Kanaaldok B2", "Schelde-Rijn Kanaal",
"Zandvlietsluis", "Ringvaart", "Tijarm",
"Kanaal van Gent naar Oostende")
## for future usage:
# "Meuse", "Juliana Kanaal", "Canal Albert", "Demer", "Dijle"
rivers <- load.shapefile("./data/lowcountries_water/LowCountries_Water_2004.shp",
"LowCountries_Water_2004",
coordinate.string,
river.names)
nete <- load.shapefile("./data/europe_water/nete.shp",
"nete",
coordinate.string,
subset.names = NULL)
update.packages("sp")
install.packages("sp")
install.packages("sp")
install.packages("sp")
install.packages("sp")
library("sp")
library("rgdal")
library("rgeos")
library("raster")
library("gdistance")
library("assertthat")
# --------------------
# INTRODUCTION
# --------------------
# Define the projection for the analysis:
coordinate.string <- CRS("+init=epsg:32631")
# Load the functionalities from the functions file:
source("receiver_distance_fun.R")
nete <- load.shapefile("./data/europe_water/nete.shp",
"nete",
coordinate.string,
subset.names = NULL)
install.packages("lidR")
install.packages("lidR")
install.packages("lidR")
install.packages("lidR")
library(lidR)
update.packages()
library("sp")
library("rgdal")
library("rgeos")
library("raster")
library("gdistance")
library("assertthat")
coordinate.string <- CRS("+init=epsg:32631")
# Load the functionalities from the functions file:
source("receiver_distance_fun.R")
river.names <- c("Schelde", "Durme", "Rupel", "Netekanaal",
"Albertkanaal", "Royerssluis", "Leopolddok",
"Amerikadok", "Vijfde Havendok", "Kanaaldok B3", "Delwaidedok",
"Schelde-Rijnkanaal", "Berendrechtsluis", "Hansadok",
"Kanaaldok B2", "Schelde-Rijn Kanaal",
"Zandvlietsluis", "Ringvaart", "Tijarm",
"Kanaal van Gent naar Oostende")
## for future usage:
# "Meuse", "Juliana Kanaal", "Canal Albert", "Demer", "Dijle"
rivers <- load.shapefile("./data/lowcountries_water/LowCountries_Water_2004.shp",
"LowCountries_Water_2004",
coordinate.string,
river.names)
# NETE SECTION (precompiled as Europe entire file is very large)
nete <- load.shapefile("./data/europe_water/nete.shp",
"nete",
coordinate.string,
subset.names = NULL)
# RIVER FROME (UK)
frome <- load.shapefile("./data/UK/Frome/Statutory_Main_River_Map.shp",
"Statutory_Main_River_Map",
coordinate.string)
# ----------------
# LOAD RECEIVERS
# ----------------
locations.receivers <- load.receivers("./data/receivernetwork_frome_2014.csv",
coordinate.string)
nrows <- 2000
ncols <- 4000
study.area.binary <- shape.to.binarymask(study.area, nrows, ncols)
# --------------------------------
# ADJUST MASK TO CONTAIN RECEIVERS
# --------------------------------
study.area.binary.extended <- adapt.binarymask(study.area.binary, locations.receivers)
study.area <- gUnion(frome)
study.area <- frome
study.area.binary <- shape.to.binarymask(study.area, nrows, ncols)
# --------------------------------
# ADJUST MASK TO CONTAIN RECEIVERS
# --------------------------------
study.area.binary.extended <- adapt.binarymask(study.area.binary, locations.receivers)
nrows <- 1000
ncols <- 2000
study.area.binary <- shape.to.binarymask(study.area, nrows, ncols)
# --------------------------------
# ADJUST MASK TO CONTAIN RECEIVERS
# --------------------------------
study.area.binary.extended <- adapt.binarymask(study.area.binary, locations.receivers)
nrows <- 3000
ncols <- 6000
study.area.binary <- shape.to.binarymask(study.area, nrows, ncols)
# --------------------------------
# ADJUST MASK TO CONTAIN RECEIVERS
# --------------------------------
study.area.binary.extended <- adapt.binarymask(study.area.binary, locations.receivers)
river.names <- c("Schelde", "Durme", "Rupel", "Netekanaal",
"Albertkanaal", "Royerssluis", "Leopolddok",
"Amerikadok", "Vijfde Havendok", "Kanaaldok B3", "Delwaidedok",
"Schelde-Rijnkanaal", "Berendrechtsluis", "Hansadok",
"Kanaaldok B2", "Schelde-Rijn Kanaal",
"Zandvlietsluis", "Ringvaart", "Tijarm",
"Kanaal van Gent naar Oostende")
## for future usage:
# "Meuse", "Juliana Kanaal", "Canal Albert", "Demer", "Dijle"
rivers <- load.shapefile("./data/lowcountries_water/LowCountries_Water_2004.shp",
"LowCountries_Water_2004",
coordinate.string,
river.names)
# NETE SECTION (precompiled as Europe entire file is very large)
nete <- load.shapefile("./data/europe_water/nete.shp",
"nete",
coordinate.string,
subset.names = NULL)
## to restart from the entire Europe shapefile:
## nete <- load.shapefile("./data/europe_water/Europe_Water_2008.shp",
##                        "Europe_Water_2008",
##                        coordinate.string,
##                        c("Nete", "Grote Nete"))
# WESTERSCHELDE
westerschelde <- load.shapefile("./data/westerschelde_water/seavox_sea_area_polygons_v13.shp",
"seavox_sea_area_polygons_v13",
coordinate.string)
# SEA
sea <- load.shapefile("./data/PJ_manual_water/PJ_ontbrekende_stukken_reduced.shp",
"PJ_ontbrekende_stukken_reduced",
coordinate.string)
study.area <- gUnion(rivers, nete)
study.area <- gUnion(study.area, westerschelde)
study.area <- gUnion(study.area, sea)
# clean workspace from individual shapefiles
rm(rivers, nete, westerschelde, sea)
# ----------------
# LOAD RECEIVERS
# ----------------
locations.receivers <- load.receivers("./data/receivernetwork_20160526.csv",
coordinate.string)
nrows <- 2000
ncols <- 4000
study.area.binary <- shape.to.binarymask(study.area, nrows, ncols)
library("sp")
library("rgdal")
library("rgeos")
library("raster")
library("gdistance")
library("assertthat")
# --------------------
# INTRODUCTION
# --------------------
# Define the projection for the analysis:
coordinate.string <- CRS("+init=epsg:32631")
# Load the functionalities from the functions file:
source("receiver_distance_fun.R")
frome <- load.shapefile("./data/UK/Frome/Statutory_Main_River_Map.shp",
"Statutory_Main_River_Map",
coordinate.string)
plot(frome)
# -----------------------
# SET STUDY AREA
# -----------------------
study.area <- frome
# ----------------
# LOAD DETECTION STATION NETWORK
# ----------------
locations.receivers <- load.receivers("./data/receivernetwork_frome_2014.csv",
coordinate.string)
nrows <- 2000
ncols <- 4000
study.area.binary <- shape.to.binarymask(study.area, nrows, ncols)
# --------------------------------
# ADJUST MASK TO CONTAIN RECEIVERS
# --------------------------------
study.area.binary.extended <- adapt.binarymask(study.area.binary, locations.receivers)
nrows <- 4000
ncols <- 8000
study.area.binary <- shape.to.binarymask(study.area, nrows, ncols)
# --------------------------------
# ADJUST MASK TO CONTAIN RECEIVERS
# --------------------------------
study.area.binary.extended <- adapt.binarymask(study.area.binary, locations.receivers)
library("sp")
library("rgdal")
library("rgeos")
library("raster")
library("gdistance")
library("assertthat")
# --------------------
# INTRODUCTION
# --------------------
# Define the projection for the analysis:
coordinate.string <- CRS("+init=epsg:32631")
# Load the functionalities from the functions file:
source("receiver_distance_fun.R")
Browse[2]> nrow(inputmat)
nete <- load.shapefile("./data/europe_water/nete.shp",
"nete",
coordinate.string,
subset.names = NULL)
frome <- load.shapefile("./data/UK/Frome/Statutory_Main_River_Map.shp",
"Statutory_Main_River_Map",
coordinate.string)
sea <- load.shapefile("./data/PJ_manual_water/PJ_ontbrekende_stukken_reduced.shp",
"PJ_ontbrekende_stukken_reduced",
coordinate.string)
river.names <- c("Schelde", "Durme", "Rupel", "Netekanaal",
"Albertkanaal", "Royerssluis", "Leopolddok",
"Amerikadok", "Vijfde Havendok", "Kanaaldok B3", "Delwaidedok",
"Schelde-Rijnkanaal", "Berendrechtsluis", "Hansadok",
"Kanaaldok B2", "Schelde-Rijn Kanaal",
"Zandvlietsluis", "Ringvaart", "Tijarm",
"Kanaal van Gent naar Oostende")
## for future usage:
# "Meuse", "Juliana Kanaal", "Canal Albert", "Demer", "Dijle"
rivers <- load.shapefile("./data/lowcountries_water/LowCountries_Water_2004.shp",
"LowCountries_Water_2004",
coordinate.string,
river.names)
river.names <- c("Schelde", "Durme", "Rupel", "Netekanaal",
"Albertkanaal", "Royerssluis", "Leopolddok",
"Amerikadok", "Vijfde Havendok", "Kanaaldok B3", "Delwaidedok",
"Schelde-Rijnkanaal", "Berendrechtsluis", "Hansadok",
"Kanaaldok B2", "Schelde-Rijn Kanaal",
"Zandvlietsluis", "Ringvaart", "Tijarm",
"Kanaal van Gent naar Oostende")
## for future usage:
# "Meuse", "Juliana Kanaal", "Canal Albert", "Demer", "Dijle"
rivers <- load.shapefile("./data/lowcountries_water/LowCountries_Water_2004.shp",
"LowCountries_Water_2004",
coordinate.string,
river.names)
# NETE SECTION (precompiled as Europe entire file is very large)
nete <- load.shapefile("./data/europe_water/nete.shp",
"nete",
coordinate.string,
subset.names = NULL)
## to restart from the entire Europe shapefile:
## nete <- load.shapefile("./data/europe_water/Europe_Water_2008.shp",
##                        "Europe_Water_2008",
##                        coordinate.string,
##                        c("Nete", "Grote Nete"))
# WESTERSCHELDE
westerschelde <- load.shapefile("./data/westerschelde_water/seavox_sea_area_polygons_v13.shp",
"seavox_sea_area_polygons_v13",
coordinate.string)
# SEA
sea <- load.shapefile("./data/PJ_manual_water/PJ_ontbrekende_stukken_reduced.shp",
"PJ_ontbrekende_stukken_reduced",
coordinate.string)
# RIVER FROME (UK)
frome <- load.shapefile("./data/UK/Frome/Statutory_Main_River_Map.shp",
"Statutory_Main_River_Map",
coordinate.string)
study.area <- gUnion(rivers, nete)
study.area <- gUnion(study.area, westerschelde)
study.area <- gUnion(study.area, sea)
rm(rivers, nete, westerschelde, sea)
# LifeWatch network
locations.receivers <- load.receivers("./data/receivernetwork_20160526.csv",
coordinate.string)
nrows <- 2000
ncols <- 4000
study.area.binary <- shape.to.binarymask(study.area, nrows, ncols)
class(frome)
class(study.area)
# NETE SECTION (precompiled as Europe entire file is very large)
nete <- load.shapefile("./data/europe_water/nete.shp",
"nete",
coordinate.string,
subset.names = NULL)
class(nete)
# NETE SECTION (precompiled as Europe entire file is very large)
nete <- load.shapefile("./data/europe_water/nete.shp",
"nete",
coordinate.string,
subset.names = NULL)
library("sp")
library("rgdal")
library("rgeos")
library("raster")
library("gdistance")
library("assertthat")
# --------------------
# INTRODUCTION
# --------------------
# Define the projection for the analysis:
coordinate.string <- CRS("+init=epsg:32631")
# NETE SECTION (precompiled as Europe entire file is very large)
nete <- load.shapefile("./data/europe_water/nete.shp",
"nete",
coordinate.string,
subset.names = NULL)
# Load the functionalities from the functions file:
source("receiver_distance_fun.R")
# NETE SECTION (precompiled as Europe entire file is very large)
nete <- load.shapefile("./data/europe_water/nete.shp",
"nete",
coordinate.string,
subset.names = NULL)
class(nete)
river.names <- c("Schelde", "Durme", "Rupel", "Netekanaal",
"Albertkanaal", "Royerssluis", "Leopolddok",
"Amerikadok", "Vijfde Havendok", "Kanaaldok B3", "Delwaidedok",
"Schelde-Rijnkanaal", "Berendrechtsluis", "Hansadok",
"Kanaaldok B2", "Schelde-Rijn Kanaal",
"Zandvlietsluis", "Ringvaart", "Tijarm",
"Kanaal van Gent naar Oostende")
## for future usage:
# "Meuse", "Juliana Kanaal", "Canal Albert", "Demer", "Dijle"
rivers <- load.shapefile("./data/lowcountries_water/LowCountries_Water_2004.shp",
"LowCountries_Water_2004",
coordinate.string,
river.names)
# WESTERSCHELDE
westerschelde <- load.shapefile("./data/westerschelde_water/seavox_sea_area_polygons_v13.shp",
"seavox_sea_area_polygons_v13",
coordinate.string)
# SEA
sea <- load.shapefile("./data/PJ_manual_water/PJ_ontbrekende_stukken_reduced.shp",
"PJ_ontbrekende_stukken_reduced",
coordinate.string)
# RIVER FROME (UK)
frome <- load.shapefile("./data/UK/Frome/Statutory_Main_River_Map.shp",
"Statutory_Main_River_Map",
coordinate.string)
class(frome)
